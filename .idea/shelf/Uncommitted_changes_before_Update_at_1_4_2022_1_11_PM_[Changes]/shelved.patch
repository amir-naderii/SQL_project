Index: .idea/dataSources.local.xml
===================================================================
diff --git a/.idea/dataSources.local.xml b/.idea/dataSources.local.xml
deleted file mode 100644
--- a/.idea/dataSources.local.xml	(revision bf01a102ecdbbd16fc193919d77931311be654a8)
+++ /dev/null	(revision bf01a102ecdbbd16fc193919d77931311be654a8)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="dataSourceStorageLocal">
-    <data-source name="AliBaba@localhost" uuid="cdc287ee-6f02-48e6-a7d0-5cda8adeaa45">
-      <database-info product="Microsoft SQL Server" version="15.00.2000" jdbc-version="4.2" driver-name="Microsoft JDBC Driver 9.4 for SQL Server" driver-version="9.4.0.0" dbms="MSSQL" exact-version="15.0.2000" exact-driver-version="9.4">
-        <extra-name-characters>$#@</extra-name-characters>
-        <identifier-quote-string>&quot;</identifier-quote-string>
-      </database-info>
-      <case-sensitivity plain-identifiers="mixed" quoted-identifiers="mixed" />
-      <secret-storage>master_key</secret-storage>
-      <user-name>Tanaz</user-name>
-      <schema-mapping>
-        <introspection-scope>
-          <node kind="database" qname="@">
-            <node kind="schema" qname="@" />
-          </node>
-        </introspection-scope>
-      </schema-mapping>
-    </data-source>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/dataSources.xml
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
deleted file mode 100644
--- a/.idea/dataSources.xml	(revision bf01a102ecdbbd16fc193919d77931311be654a8)
+++ /dev/null	(revision bf01a102ecdbbd16fc193919d77931311be654a8)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
-    <data-source source="LOCAL" name="AliBaba@localhost" uuid="cdc287ee-6f02-48e6-a7d0-5cda8adeaa45">
-      <driver-ref>sqlserver.ms</driver-ref>
-      <synchronize>true</synchronize>
-      <jdbc-driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</jdbc-driver>
-      <jdbc-url>jdbc:sqlserver://localhost:1433;database=AliBaba</jdbc-url>
-      <working-dir>$ProjectFileDir$</working-dir>
-    </data-source>
-  </component>
-</project>
\ No newline at end of file
Index: src/main/java/ir/ac/kntu/Repository/InternationalDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/ac/kntu/Repository/InternationalDao.java b/src/main/java/ir/ac/kntu/Repository/InternationalDao.java
new file mode 100644
--- /dev/null	(date 1641289312621)
+++ b/src/main/java/ir/ac/kntu/Repository/InternationalDao.java	(date 1641289312621)
@@ -0,0 +1,81 @@
+package ir.ac.kntu.Repository;
+
+import ir.ac.kntu.Model.Bus_Ticket;
+import ir.ac.kntu.Model.International;
+
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
+
+public class InternationalDao implements Repository<International, Integer>{
+    private final HashMap<String, PreparedStatement> sqlStm = new HashMap<>();
+
+    public InternationalDao(Connection con){
+        sqlStatements(con);
+    }
+    private void sqlStatements(Connection connection) {
+        try {
+            sqlStm.put("findByID",connection.prepareStatement(
+                    "SELECT F.* FROM International I, Flight F WHERE " +
+                            "I.flight_id = F.id AND I.flight_id = ?"
+            ));
+            sqlStm.put("findAll",connection.prepareStatement(
+                    "SELECT F.* FROM International I, Flight F WHERE " +
+                            "I.flight_id = F.id"
+            ));
+
+            sqlStm.put("insert",connection.prepareStatement(
+                    "INSERT INTO Bus_Ticekt SET VALUES(?,?,?,?)"
+            ));
+            sqlStm.put("update",connection.prepareStatement(
+                    "UPDATE Bus_Ticket SET passengers = ?, price = ?, bus_id = ? WHERE id = ?"
+            ));
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private Bus_Ticket extractFromResultSet(ResultSet Rs){
+        try {
+            return new Bus_Ticket(Rs.getInt(1),
+                    Rs.getInt(2),Rs.getInt(3),Rs.getInt(4));
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    @Override
+    public International findById(Integer integer) {
+        return null;
+    }
+
+    @Override
+    public List<International> findByIDs(Collection<Integer> integers) {
+        return null;
+    }
+
+    @Override
+    public List<International> findAll() {
+        return null;
+    }
+
+    @Override
+    public Boolean deleteByID(Integer integer) {
+        return null;
+    }
+
+    @Override
+    public Boolean DeleteByIDs(Collection<Integer> integers) {
+        return null;
+    }
+
+    @Override
+    public International save(International E) {
+        return null;
+    }
+}
